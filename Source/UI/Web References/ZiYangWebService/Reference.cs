//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace UI.ZiYangWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ZiYangWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ZiYangWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InportBiochemistryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsDataByIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ZiYangWebService() {
            this.Url = global::UI.Properties.Settings.Default.UI_ZiYangWebService_ZiYangWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InportBiochemistryDataCompletedEventHandler InportBiochemistryDataCompleted;
        
        /// <remarks/>
        public event GetStatisticsDataCompletedEventHandler GetStatisticsDataCompleted;
        
        /// <remarks/>
        public event GetStatisticsDataByIDCompletedEventHandler GetStatisticsDataByIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InportBiochemistryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InportBiochemistryData([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer) {
            object[] results = this.Invoke("InportBiochemistryData", new object[] {
                        buffer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InportBiochemistryDataAsync(byte[] buffer) {
            this.InportBiochemistryDataAsync(buffer, null);
        }
        
        /// <remarks/>
        public void InportBiochemistryDataAsync(byte[] buffer, object userState) {
            if ((this.InportBiochemistryDataOperationCompleted == null)) {
                this.InportBiochemistryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInportBiochemistryDataOperationCompleted);
            }
            this.InvokeAsync("InportBiochemistryData", new object[] {
                        buffer}, this.InportBiochemistryDataOperationCompleted, userState);
        }
        
        private void OnInportBiochemistryDataOperationCompleted(object arg) {
            if ((this.InportBiochemistryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InportBiochemistryDataCompleted(this, new InportBiochemistryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetStatisticsData() {
            object[] results = this.Invoke("GetStatisticsData", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsDataAsync() {
            this.GetStatisticsDataAsync(null);
        }
        
        /// <remarks/>
        public void GetStatisticsDataAsync(object userState) {
            if ((this.GetStatisticsDataOperationCompleted == null)) {
                this.GetStatisticsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsDataOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsData", new object[0], this.GetStatisticsDataOperationCompleted, userState);
        }
        
        private void OnGetStatisticsDataOperationCompleted(object arg) {
            if ((this.GetStatisticsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsDataCompleted(this, new GetStatisticsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatisticsDataByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetStatisticsDataByID(string ID) {
            object[] results = this.Invoke("GetStatisticsDataByID", new object[] {
                        ID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsDataByIDAsync(string ID) {
            this.GetStatisticsDataByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetStatisticsDataByIDAsync(string ID, object userState) {
            if ((this.GetStatisticsDataByIDOperationCompleted == null)) {
                this.GetStatisticsDataByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsDataByIDOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsDataByID", new object[] {
                        ID}, this.GetStatisticsDataByIDOperationCompleted, userState);
        }
        
        private void OnGetStatisticsDataByIDOperationCompleted(object arg) {
            if ((this.GetStatisticsDataByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsDataByIDCompleted(this, new GetStatisticsDataByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InportBiochemistryDataCompletedEventHandler(object sender, InportBiochemistryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InportBiochemistryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InportBiochemistryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStatisticsDataCompletedEventHandler(object sender, GetStatisticsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStatisticsDataByIDCompletedEventHandler(object sender, GetStatisticsDataByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsDataByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsDataByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591